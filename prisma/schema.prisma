generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id            String  @id @default(auto()) @map("_id") @db.ObjectId
  profile_photo String?
  username      String
  email         String
  password      String
}

model Patient {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  profile_photo  String?
  imageUrl       String?
  name           String
  owner          String?
  specie         String?
  race           String?
  gender         String?
  weight         String?
  prognosis      String?
  diagnosis      Json[]
  physical_shape String?
  entry_date     String?
  departure_date String?
  reports        Report[]
  exams          Exam[]
}

model Report {
  id          String               @id @default(auto()) @map("_id") @db.ObjectId
  patientId   String               @db.ObjectId
  shift       String
  author      String
  report_text String
  createdAt   String?
  updatedAt   String?
  patient     Patient?             @relation(fields: [patientId], references: [id])
  attachments ReportsAttachments[]
}

model Exam {
  id          String            @id @default(auto()) @map("_id") @db.ObjectId
  patientId   String            @db.ObjectId
  name        String
  createdAt   String?
  updatedAt   String?
  patient     Patient?          @relation(fields: [patientId], references: [id])
  attachments ExamAttachments[]
}

model ReportsAttachments {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  reportId String  @db.ObjectId
  file     String
  fileUrl  String
  size     BigInt
  report   Report? @relation(fields: [reportId], references: [id])
}

model ExamAttachments {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  examId  String @db.ObjectId
  file    String
  fileUrl String
  size    BigInt
  exam    Exam?  @relation(fields: [examId], references: [id])
}
